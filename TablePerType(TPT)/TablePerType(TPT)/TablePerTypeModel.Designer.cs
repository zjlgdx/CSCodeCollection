//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace TablePerType
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class VehicleDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new VehicleDBEntities object using the connection string found in the 'VehicleDBEntities' section of the application configuration file.
        /// </summary>
        public VehicleDBEntities() : base("name=VehicleDBEntities", "VehicleDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new VehicleDBEntities object.
        /// </summary>
        public VehicleDBEntities(string connectionString) : base(connectionString, "VehicleDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new VehicleDBEntities object.
        /// </summary>
        public VehicleDBEntities(EntityConnection connection) : base(connection, "VehicleDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vehicle> Vehicles
        {
            get
            {
                if ((_Vehicles == null))
                {
                    _Vehicles = base.CreateObjectSet<Vehicle>("Vehicles");
                }
                return _Vehicles;
            }
        }
        private ObjectSet<Vehicle> _Vehicles;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vehicles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicles(Vehicle vehicle)
        {
            base.AddObject("Vehicles", vehicle);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VehicleDBModel", Name="Boat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Boat : Vehicle
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Boat object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="vin">Initial value of the Vin property.</param>
        /// <param name="make">Initial value of the Make property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="propSize">Initial value of the PropSize property.</param>
        public static Boat CreateBoat(global::System.Int32 id, global::System.String vin, global::System.String make, global::System.String model, global::System.Int32 year, global::System.String propSize)
        {
            Boat boat = new Boat();
            boat.Id = id;
            boat.Vin = vin;
            boat.Make = make;
            boat.Model = model;
            boat.Year = year;
            boat.PropSize = propSize;
            return boat;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropSize
        {
            get
            {
                return _PropSize;
            }
            set
            {
                OnPropSizeChanging(value);
                ReportPropertyChanging("PropSize");
                _PropSize = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropSize");
                OnPropSizeChanged();
            }
        }
        private global::System.String _PropSize;
        partial void OnPropSizeChanging(global::System.String value);
        partial void OnPropSizeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VehicleDBModel", Name="Car")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Car : Vehicle
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Car object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="vin">Initial value of the Vin property.</param>
        /// <param name="make">Initial value of the Make property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="tireSize">Initial value of the TireSize property.</param>
        public static Car CreateCar(global::System.Int32 id, global::System.String vin, global::System.String make, global::System.String model, global::System.Int32 year, global::System.String tireSize)
        {
            Car car = new Car();
            car.Id = id;
            car.Vin = vin;
            car.Make = make;
            car.Model = model;
            car.Year = year;
            car.TireSize = tireSize;
            return car;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TireSize
        {
            get
            {
                return _TireSize;
            }
            set
            {
                OnTireSizeChanging(value);
                ReportPropertyChanging("TireSize");
                _TireSize = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TireSize");
                OnTireSizeChanged();
            }
        }
        private global::System.String _TireSize;
        partial void OnTireSizeChanging(global::System.String value);
        partial void OnTireSizeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VehicleDBModel", Name="Vehicle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Boat))]
    [KnownTypeAttribute(typeof(Car))]
    public partial class Vehicle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vehicle object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="vin">Initial value of the Vin property.</param>
        /// <param name="make">Initial value of the Make property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        public static Vehicle CreateVehicle(global::System.Int32 id, global::System.String vin, global::System.String make, global::System.String model, global::System.Int32 year)
        {
            Vehicle vehicle = new Vehicle();
            vehicle.Id = id;
            vehicle.Vin = vin;
            vehicle.Make = make;
            vehicle.Model = model;
            vehicle.Year = year;
            return vehicle;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Vin
        {
            get
            {
                return _Vin;
            }
            set
            {
                OnVinChanging(value);
                ReportPropertyChanging("Vin");
                _Vin = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Vin");
                OnVinChanged();
            }
        }
        private global::System.String _Vin;
        partial void OnVinChanging(global::System.String value);
        partial void OnVinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Make
        {
            get
            {
                return _Make;
            }
            set
            {
                OnMakeChanging(value);
                ReportPropertyChanging("Make");
                _Make = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Make");
                OnMakeChanged();
            }
        }
        private global::System.String _Make;
        partial void OnMakeChanging(global::System.String value);
        partial void OnMakeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();

        #endregion
    
    }

    #endregion
    
}
